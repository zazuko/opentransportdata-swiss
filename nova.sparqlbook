[
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Was ist drin, in diesen Daten?\n\nDie Daten befinden sich auf [LINDAS](https://lindas.admin.ch/) in den folgenden beiden Named-Graphs:\n- https://lindas.admin.ch/sbb/nova\n- https://lindas.admin.ch/sbb/didok\n\nMit dem ersten Query erstellen wir uns ein Inhaltsverzeichnis über diese zwei Graphen. Es zeigt, von welchen Klassen es wieviele Instanzen im jeweiligen Named-Graph hat:",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "SELECT ?g ?cls (COUNT(?s) AS ?count) WHERE {\n  {\n    SELECT  DISTINCT ?g \n    WHERE  {\n      GRAPH ?g {\n      } \n    }\n  }\n  GRAPH ?g {\n    ?s a ?cls\n  }\n} GROUP BY ?g  ?cls\nORDER BY ?g ?cls\n\nVALUES ?g {\n    <https://lindas.admin.ch/sbb/nova>\n    <https://lindas.admin.ch/sbb/didok>\n}\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Datenmodell\n\n![](grafik.png)\n\n### Atlas (Didok)\n\n```mermaid\n---\n  config:\n    class:\n      hideEmptyMembersBox: true\n---\nclassDiagram\n    direction LR    \n\n    Station -- \"1\" Organization : provider\n\n    style Station fill:lightgray\n    style Organization fill:lightgray\n```\n\n\n### Verbund\n\n```mermaid\n---\n  config:\n    class:\n      hideEmptyMembersBox: true\n---\nclassDiagram\n    direction LR\n    \n    LocalNetwork -- Zoningplan\n    \n    Zoningplan -- \"1\" Alliance\n    Zoningplan -- \"*\" Tarif\n    \n    Zone -- \"1\" Organization : provider\n    Zone -- \"1\" Alliance\n    Zone \"*\" --* Zoningplan\n    Zone -- \"*\" PayLevel\n\n    PayLevel \"*\" -- \"1\" Tarif\n    PayLevel -- \"*\" LocalNetwork\n    Tarif -- \"1\" Organization : provider\n\n    ZoningPriceCharacteristic -- \"*\" CustomerSegment\n    \n    TransportEdge \"*\" o-- \"2\" Station : stop\n    TransportEdge \"*\" -- \"*\" Zone\n    TransportEdge \"*\" -- \"*\" Anwendungsbereich\n    TransportEdge -- \"*\" PayLevel\n    TransportEdge \"*\" -- \"*\" LocalNetwork\n    TransportEdge \"*\" -- \"*\" Zoningplan\n\n    Station -- Organization : provider\n\n    style Station fill:lightgray\n    style Organization fill:lightgray\n```\n\n\n### Direkter Verkehr (DV)\n\n```mermaid\n---\n  config:\n    class:\n      hideEmptyMembersBox: true\n---\nclassDiagram\n    direction LR\n    Relationsgebiet \"*\" -- \"1\" Organization : provider\n    Relationsgebiet \"*\" -- \"1\" Preistabelle    \n\n    Relation \"*\" o-- \"2\" Station : stop\n    Relation \"*\" -- \"1\" Relationsgebiet\n\n    Station -- Organization : provider\n    \n    VorberechnetePreistabelle --|> Preistabelle\n    VorberechnetePreistabelle  *-- \"*\" Tarifwertpreisauspraegung\n\n    Tarifwertpreisauspraegung \"*\" -- \"*\" CustomerSegment\n\n    style Station fill:lightgray\n    style Organization fill:lightgray\n```",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Allgemeine Abfragen\n## Die IRI einer Haltestelle herausfinden\n\nHäufig benötigen wir für Abfragen die IRIs von bestimmten Resourcen, kennen diese aber nicht auswendig. Mit Hilfe der Volltextsuche können wir die IRI herausfinden, beispielsweise für die Haltestelle \"Bärenmatte\": ",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX gtfs: <http://vocab.gtfs.org/terms#>\n\nSELECT DISTINCT ?s ?l\nWHERE {\n  ?s a gtfs:Station.\n  ?s ?p ?l.\n  (?l ?score) <tag:stardog:api:property:textMatch> 'Bärenmatte'.\n} LIMIT 10\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "Volltextsuche mit boolschem \"Logical AND\" Operator `&&`:",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?s ?l\nWHERE {\n  ?s a <https://lod.opentransportdata.swiss/vocab/Preistabelle> .\n  \n  ?s ?p ?l.\n  (?l ?score) <tag:stardog:api:property:textMatch> 'Alpbus && T74'.\n} LIMIT 10\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "Mit `DESCRIBE` können wir uns anschliessend alle Statements zu einer oder mehreren Resourcen ansehen. Beispielsweise für eine Haltestelle und ihre Geometrie:",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "DESCRIBE\n\n## Zürich HB\n<https://lod.opentransportdata.swiss/didok/8503000>\n<https://lod.opentransportdata.swiss/didok/8503000/geometry>",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "`DESCRIBE` antwortet mit einem Graph. Diesen können wir mit [Sketch](https://sketch.zazuko.com/) visualisieren, mit copy/paste der Statements ins Formularfeld \"RDF Editor\".",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Abfragen zu Verbünden \n## Alle Haltestellen eines Verbundes\n\nVerwendet man für die Abrage das Web-UI, dann wird das Resultat des Queries [auf der Karte visualisiert](https://s.zazuko.com/2V2aiHQ) `Geo`",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## alle Verbünde",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nprefix otd: <https://lod.opentransportdata.swiss/vocab/>\n\n\nSELECT * \nFROM <https://lindas.admin.ch/sbb/nova>\nWHERE {\n  ?alliance a otd:Alliance; \n               rdfs:label     ?namen.\n   \n} \nORDER BY asc (?alliance)  \nLIMIT 100",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Alle Zonenpläne",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "Pro Ticketart gibt es eigene Zonenpläne. Nicht alle Verbindungen sind den verschiedenen Ticketarten erlaubt. Dh. Ein \"Einzelticket\" mit 2 Zonen darf etwas anderes als die Tageskarte oder ein Monatsabo. Ev. gibt es auch mehr Zonen im Montasabo, als für Einzelticket.",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/alleZoneplane.rq\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nprefix otd: <https://lod.opentransportdata.swiss/vocab/>\n\n\nSELECT * \nFROM <https://lindas.admin.ch/sbb/nova>\nWHERE {\n  ?Zonenplan a otd:ZoningPlan; \n               rdfs:label     ?namen.\n   \n} \nLIMIT 100",
    "metadata": {
      "file": "SPARQL/alleZoneplane.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Alle Zonenpläne des Verbundes Libero",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nprefix otd: <https://lod.opentransportdata.swiss/vocab/>\n\n\nSELECT * \nFROM <https://lindas.admin.ch/sbb/nova>\nWHERE {\n  ?Zonenplan a otd:ZoningPlan; \n               rdfs:label     ?namen;\n               otd:alliance ?alliance.\n   FILTER(?alliance IN (<https://lod.opentransportdata.swiss/alliance/libero>))\n} \nLIMIT 100",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## GeOps Zonendaten\nSpezial Auswertung um graphische Zonenpläne zu generieren",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/GeOpsZonendaten.rq\nPREFIX dcterm: <http://purl.org/dc/terms/>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX xsd:<http://www.w3.org/2001/XMLSchema#>\n\n#SELECT DISTINCT ?VerbundBezeichnung ?ZonenplanBezeichnung ?ZonenCode ?VerkehrsmittelBezeichnung ?Didok ?HaltestelleBezeichnung\nSELECT ?VerbundBezeichnung ?ZonenplanBezeichnung ?ZonenCode ?ZonenEignerCode ?ZonenEignerKuerzel ?VerkehrsmittelBezeichnung ?stop1id ?stop1Name ?stop2id ?stop2Name\nWHERE {\n  ?Verbund a otd:Alliance ;\n    rdfs:label ?VerbundBezeichnung .\n  \n  ?Zonenplan a otd:ZoningPlan ;\n    otd:alliance ?Verbund ;\n    otd:zone ?Zone ;\n    rdfs:label ?ZonenplanBezeichnung .\n  \n  ?Zone a otd:Zone ;\n    schema:identifier ?ZonenCode;\n    schema:provider ?ZonenEigner.\n  \n  ?ZonenEigner a schema:Organization;\n               schema:alternateName ?ZonenEignerKuerzel;\n               schema:identifier ?ZonenEignerCode.\n  \n  ?TransportEdge a otd:TransportEdge;\n    otd:zone ?Zone;\n    otd:meanOfTransport ?VerkehrsmittelBezeichnung;\n    gtfs:stop ?stop1 ;\n    gtfs:stop ?stop2 .\n  \n  ?stop1 rdfs:label ?stop1Name ;\n    dcterms:identifier ?stop1id .\n  \n  ?stop2 rdfs:label ?stop2Name ;\n    dcterms:identifier ?stop2id .\n  \n  FILTER( xsd:integer(?stop1id) > xsd:integer(?stop2id) )\n} LIMIT 100",
    "metadata": {
      "file": "SPARQL/GeOpsZonendaten.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Haltestellen im Verbund",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/Haltestelle2Verbund.rq\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\n\n#SELECT DISTINCT gibt nur einzigartige Kombinationen aus.\nSELECT DISTINCT ?verbund_name ?didok ?haltestelle_bezeichnung\nFROM <https://lindas.admin.ch/sbb/nova>\nWHERE {\n  \t# Ausgabe zu Zonenplan\n  \t?Kante a otd:TransportEdge;\n  \t\totd:zoningPlan ?Zonenplan;\n  \t\tgtfs:stop ?haltestelle.\n  \n  \t?Zonenplan otd:alliance ?verbund.\n  \n  \t?verbund rdfs:label ?verbund_name.\n    \n  \tFILTER(?Zonenplan IN (<https://lod.opentransportdata.swiss/zoningplan/libero/libero-abo-abo-libero>))\n\n  \tSERVICE <https://lindas.admin.ch/query> {\n    ?haltestelle rdfs:label ?haltestelle_bezeichnung;\n\t\tdcterms:identifier ?didok.\n}\n} \nLIMIT 1000",
    "metadata": {
      "file": "SPARQL/Haltestelle2Verbund.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Haltestellen zum Zonenplan Onde Verte Billet\n\nVerwendet man für die Abrage das Web-UI, dann wird das Resultat des Queries [auf der Karte visualisiert](https://s.zazuko.com/2PtRRAF) `Geo`",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/Haltestelle2ZplOndeVerteBillet_geometry.rq\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\n\n# Dieses Query gibt alle Haltestellen zum Zonenplan Onde Verte Billet aus und stellt sie grafisch dar. \nSELECT DISTINCT ?geometrie\nWHERE {\n    # Ausgabe zu Zonenplan\n    ?Kante a otd:TransportEdge;\n        otd:zoningPlan ?Zonenplan;\n        gtfs:stop ?haltestelle.\n  \n    FILTER(?Zonenplan IN (<https://lod.opentransportdata.swiss/zoningplan/onde-verte/onde-verte-billett-billett>))\n  \t\n    ?haltestelle <http://www.opengis.net/ont/geosparql#hasGeometry>/<http://www.opengis.net/ont/geosparql#asWKT> ?geometrie\n} \n",
    "metadata": {
      "file": "SPARQL/Haltestelle2ZplOndeVerteBillet_geometry.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Kante2Zonenplan\nWelche Kanten befinden sich in einem bestimmten Zonenplan",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/Kante2Zonenplan.rq\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\n\n# Select: wählt im Ergebnis die Variablen aus, welche angezeigt werden sollen .\n#SELECT ?Zonenplan ?zonenplan_name ?zone ?zone_name\nSELECT *\nFROM <https://lindas.admin.ch/sbb/nova>\nWHERE {\n  \t# Ausgabe zu Zonenplan\n  \t?Kante a otd:TransportEdge;\n  \t\totd:zoningPlan ?Zonenplan;\n  \t\tgtfs:stop ?haltestelle.\n  \n  \tFILTER(?Zonenplan IN (<https://lod.opentransportdata.swiss/zoningplan/onde-verte/onde-verte-billett-billett>))\n} \nLIMIT 1000",
    "metadata": {
      "file": "SPARQL/Kante2Zonenplan.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Kurzstrecken ab einer Station",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/Kurzstrecken_ab_einer_Station.rq\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX schema: <http://schema.org/>\n\nSELECT ?departure ?departureCoord ?departureID ?arrival ?arrivalCoord ?arrivalID\nWHERE {\n        ?Kante a otd:TransportEdge;\n              otd:zoningPlan <https://lod.opentransportdata.swiss/zoningplan/libero/libero-billett-billett-libero>;\n              gtfs:stop ?departurePoint ;\n              gtfs:stop ?arrivalPoint .\n  \n        ?departurePoint rdfs:label ?departure ;\n             <http://www.opengis.net/ont/geosparql#hasGeometry>/<http://www.opengis.net/ont/geosparql#asWKT> ?departureCoord;              \n             dcterms:identifier ?departureID .\n  \n         ?arrivalPoint rdfs:label ?arrival ;\n             <http://www.opengis.net/ont/geosparql#hasGeometry>/<http://www.opengis.net/ont/geosparql#asWKT> ?arrivalCoord;                   \n            dcterms:identifier ?arrivalID. \n  \n  FILTER(?departurePoint IN  (<https://lod.opentransportdata.swiss/didok/8580425>))\n  } \n  \nlimit 100",
    "metadata": {
      "file": "SPARQL/Kurzstrecken_ab_einer_Station.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Lokalnetz geordnet\nWas für lokale Netze gibt es in der Schweiz",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/Lokalnetz-geordnet.rq\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nprefix otd: <https://lod.opentransportdata.swiss/vocab/>\n\nSELECT *\nFROM <https://lindas.admin.ch/sbb/nova>\nWHERE {\n  ?Kante a otd:LocalNetwork;\n          rdfs:label ?name;\n} \n ORDER BY ASC (?name)\nLIMIT 1000\n",
    "metadata": {
      "file": "SPARQL/Lokalnetz-geordnet.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Zone2Zonenplan",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/Zone2Zonenplan.rq\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\n\n# Select: wählt die Variablen aus, welche angezeigt werden sollen im Ergebnis.\nSELECT ?Zonenplan ?zonenplan_name ?zone ?zone_name\nFROM <https://lindas.admin.ch/sbb/nova>\nWHERE {\n  \t# Ausgabe zu Zonenplan\n  \t?Zonenplan a\totd:ZoningPlan;\n    \trdfs:label ?zonenplan_name;\n  \t\totd:zone ?zone.\n  \n  \t# Ausgabe zu Zone\n  \t?zone rdfs:label ?zone_name.\n} ",
    "metadata": {
      "file": "SPARQL/Zone2Zonenplan.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Haltestelle welche an Relationen liegen welche eine bestimmte Zone beinhalten",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/Zone-haltestelle-geomapping-label.rq\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\n\nSELECT DISTINCT ?geometrie ?geometrieLabel\nWHERE {\n    ?Kante a otd:TransportEdge;\n        otd:zone <https://lod.opentransportdata.swiss/zone/libero/libero-abo-abo-libero/300> ;\n        gtfs:stop ?haltestelle .\n  \n    ?haltestelle <http://www.opengis.net/ont/geosparql#hasGeometry>/<http://www.opengis.net/ont/geosparql#asWKT> ?geometrie ;\n    \t  rdfs:label ?geometrieLabel .\n}",
    "metadata": {
      "file": "SPARQL/Zone-haltestelle-geomapping-label.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Zonenplan Differenz\nwelche Haltestelle sind nicht im \"anderen\" Zonenplan enthalten",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/zonenplan-diff.rq\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\n\nSELECT DISTINCT ?haltestelle ?geometrie  ?geometrieLabel WHERE {\n  \n  \n        ?Kante a otd:TransportEdge;\n          otd:zoningPlan <https://lod.opentransportdata.swiss/zoningplan/libero/libero-abo-abo-libero> ;\n#          otd:zoningPlan <https://lod.opentransportdata.swiss/zoningplan/libero/libero-billett-billett-libero> ;\n            \n          gtfs:stop ?haltestelle .\n  \n  MINUS {\n          ?Kante a otd:TransportEdge;\n#          otd:zoningPlan <https://lod.opentransportdata.swiss/zoningplan/libero/libero/libero-billett-billett-libero> ;\n          otd:zoningPlan <https://lod.opentransportdata.swiss/zoningplan/libero/libero-uz-libero-tageskarte> ;\n\n          gtfs:stop ?haltestelle .\n  }\n  \n    ?haltestelle <http://www.opengis.net/ont/geosparql#hasGeometry>/<http://www.opengis.net/ont/geosparql#asWKT> ?geometrie ;\n    \trdfs:label ?geometrieLabelSingle ;\n  \t\tdcterms:identifier ?uic .\n  \n    BIND( CONCAT( ?geometrieLabelSingle, \" (\" ,?uic, \")\") AS ?geometrieLabel )\n\n  \n  #FILTER( CONTAINS( ?haltestelleLabel, \"Wabern\")) \n}",
    "metadata": {
      "file": "SPARQL/zonenplan-diff.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Zonenplan einer Kante",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "in welchen Zonenplänen ist die Verbindung Bern-Thun",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/Zonenplan einer Kante.rq\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <http://schema.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nprefix otd: <https://lod.opentransportdata.swiss/vocab/>\nprefix vcard: <http://www.w3.org/2006/vcard/ns#>\n\nSELECT * \nFROM <https://lindas.admin.ch/sbb/nova>\nWHERE {\n  ?Kante a otd:TransportEdge;\n               otd:zoningPlan ?zonenplan. \n   \n} \nLIMIT 100\n",
    "metadata": {
      "file": "SPARQL/Zonenplan einer Kante.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Abfragen zum direkten Verkehr\n## Tarifdreieck - Direkter Verkehr (DV)\nEin Tarifdreieck ist die Visualisierung aller Relationen eines Relationsgebietes mit ihren Tarifwerten",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# from file SPARQL/Tarifdreieck-DV-Relationsgebiet.rq\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX schema: <http://schema.org/>\n\nSELECT ?stop1 ?stop2 ?stop1Name ?stop2Name ?tarifwert WHERE {\n\n    # Relationsgebiet \"Heiden - Rorschach Hafen\"\n    ?relation otd:relationsgebiet <https://lod.opentransportdata.swiss/relationsgebiet/ids-6195732000001> .\n    ?relation gtfs:stop ?stop1 .\n    ?relation gtfs:stop ?stop2 .\n    ?relation otd:tarifwert ?tarifwert .\n    FILTER (?stop1 != ?stop2)\n\n    ?stop1 schema:name ?stop1Name .\n    ?stop2 schema:name ?stop2Name .\n\n    VALUES (?stop2 ?stop2Position) {\n        (<https://lod.opentransportdata.swiss/didok/8506354> 1)\n        (<https://lod.opentransportdata.swiss/didok/8506353> 2)\n        (<https://lod.opentransportdata.swiss/didok/8506352> 3)\n        (<https://lod.opentransportdata.swiss/didok/8506400> 4)\n        (<https://lod.opentransportdata.swiss/didok/8506278> 5)\n        (<https://lod.opentransportdata.swiss/didok/8506311> 6)\n        (<https://lod.opentransportdata.swiss/didok/8506306> 7)\n    }\n} ORDER BY ?stop1Position ?stop2Position\n\nVALUES (?stop1 ?stop1Position) {\n    (<https://lod.opentransportdata.swiss/didok/8506354> 1)\n    (<https://lod.opentransportdata.swiss/didok/8506353> 2)\n    (<https://lod.opentransportdata.swiss/didok/8506352> 3)\n    (<https://lod.opentransportdata.swiss/didok/8506400> 4)\n    (<https://lod.opentransportdata.swiss/didok/8506278> 5)\n    (<https://lod.opentransportdata.swiss/didok/8506311> 6)\n    (<https://lod.opentransportdata.swiss/didok/8506306> 7)\n}",
    "metadata": {
      "file": "SPARQL/Tarifdreieck-DV-Relationsgebiet.rq"
    }
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### die Relationen mit dem höchsten Tarifwert \nDa nicht alle Preistabelle",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "    PREFIX gtfs: <http://vocab.gtfs.org/terms#>\n    PREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\n    PREFIX schema: <http://schema.org/>\n\n    SELECT DISTINCT ?stop1 ?stop2 ?stop1Name ?stop2Name ?tarifwert ?effKilometer ?relationsgebiet where {\n\n    # grösster Tarifwert \n        ?dvRelation gtfs:stop ?stop1 .\n        ?dvRelation gtfs:stop ?stop2 .\n        ?dvRelation otd:tarifwert ?tarifwert .\n        ?dvRelation otd:effektiveKilometer ?effKilometer .\n        ?dvRelation otd:relationsgebiet ?relationsgebiet .\n        FILTER (?stop1 != ?stop2)\n\n    ?stop1 schema:name ?stop1Name .\n    ?stop2 schema:name ?stop2Name .\n\n   \n    } ORDER BY DESC (?tarifwert)\n    limit 100",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Relation mit der grössten Differenz zwischen effektiven Kilometern und Tarifwert\r\nüber den Filter können die Schiffe ausgeblendet werden",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": " PREFIX gtfs: <http://vocab.gtfs.org/terms#>\n    PREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\n    PREFIX schema: <http://schema.org/>\n    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\n    SELECT distinct ?dvRelation ?stop1 ?stop2 ?stop1Name ?stop2Name ?tarifwert ?effKilometer (?tarifwert - ?effKilometer AS ?diff) ?ProvName ?meanOfTransport where {\n\n        # grösster Tarifwert \n        ?dvRelation gtfs:stop ?stop1 .\n        ?dvRelation gtfs:stop ?stop2 .\n        ?dvRelation otd:tarifwert ?tarifwert .\n        ?dvRelation otd:effektiveKilometer ?effKilometer .\n        ?dvRelation otd:relationsgebiet ?relationsgebiet .\n        ?stop1     schema:provider ?provider.\n        ?provider  rdfs:label ?ProvName.\n    \n    \n        FILTER (?stop1 != ?stop2)\n        FILTER (LANG(?ProvName) = \"de\")\n\n        ?stop1 schema:name ?stop1Name ;\n               otd:meanOfTransport ?meanOfTransport.\n        ?stop2 schema:name ?stop2Name .\n        Filter (?meanOfTransport not in (<https://lod.opentransportdata.swiss/mean-of-transport/boat>))\n\n    \n    } ORDER BY desc(?diff)\n    limit 1000",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### längste Effektive Kilometer bei Tarifwert 0\r\nDas sind Gratisbusse, die in Kombination eines Einzeltickets verkauft werden.",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# längste Effektive Kilometer bei Tarifwert 0\n\n    PREFIX gtfs: <http://vocab.gtfs.org/terms#>\n    PREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\n    PREFIX schema: <http://schema.org/>\n\tPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\n\tSELECT DISTINCT ?stop1 ?stop2 ?stop1Name ?stop2Name ?tarifwert ?effKilometer  (?effKilometer -?tarifwert AS ?diff) ?ProvName where {\n\n    # grösster Tarifwert \n        ?dvRelation gtfs:stop ?stop1 .\n        ?dvRelation gtfs:stop ?stop2 .\n        ?dvRelation otd:tarifwert ?tarifwert .\n        ?dvRelation otd:effektiveKilometer ?effKilometer .\n        ?dvRelation otd:relationsgebiet ?relationsgebiet .\n        ?stop1     schema:provider ?provider.\n        ?provider  rdfs:label ?ProvName.\n        FILTER (?stop1 != ?stop2)\n        FILTER (LANG(?ProvName) = \"de\")\n       FILTER (?tarifwert =0)\n\n    ?stop1 schema:name ?stop1Name .\n    ?stop2 schema:name ?stop2Name .\n\n   \n    } ORDER BY DESC(?diff)\n    limit 1000",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Relationen ohne effektive Kilometer",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# wieviele Relationen haben effektive Kilometer 0\n    PREFIX gtfs: <http://vocab.gtfs.org/terms#>\n    PREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\n\n    SELECT (COUNT(?dvRelation) AS ?AnzahlEffKilometer0)\n    WHERE {\n        ?dvRelation otd:effektiveKilometer 0 .\n    }",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Alle relationen des DV bei denen die werte von Tarifwerte / effektive Kilometer anders sind wenn der Antoss Preis oder Kilometer ist\n\nInterpretation der Fragestellung:\n- Relationen haben identische Haltestellen\n- Relationen sind in Relationsgebieten mit identischem Label\n- Preistabellen unterscheiden sich im Anstosstyp\n- Relationen unterscheiden sich im Tarifwert",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX schema: <http://schema.org/>\n\nSELECT ?gebietLabel ?stop1 ?stop2 ?stop1Name ?stop2Name  ?tarifwert1 ?tarifwert2  WHERE {\n\n    ?relation1 otd:relationsgebiet/rdfs:label ?gebietLabel .\n    ?relation1 otd:relationsgebiet/otd:preistabelle/otd:anstossTyp \"PREIS\" .\n    ?relation1 gtfs:stop ?stop1 .\n    ?relation1 gtfs:stop ?stop2 .\n    ?relation1 otd:tarifwert ?tarifwert1 .\n\n    ?relation2 otd:relationsgebiet/rdfs:label ?gebietLabel .\n    ?relation2 otd:relationsgebiet/otd:preistabelle/otd:anstossTyp \"KILOMETER\" .\n    ?relation2 gtfs:stop ?stop1 .\n    ?relation2 gtfs:stop ?stop2 .\n    ?relation2 otd:tarifwert ?tarifwert2 .\n    \n    FILTER (?stop1 != ?stop2)\n    FILTER (?relation1 != ?relation2)\n    FILTER (?tarifwert1 != ?tarifwert2)\n\n    ?stop1 schema:name ?stop1Name .\n    ?stop2 schema:name ?stop2Name .\n}\nLIMIT 100\n\nVALUES ?gebietLabel {\n    \"Heiden - Rorschach Hafen\"\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Alle relationen, die es sowohl im DV wie im Zonenmodell gibt\n\nInterpretation der Fragestellung:\n- Relation und Verkehrskante haben identische Haltestellen",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX schema: <http://schema.org/>\n\nSELECT distinct ?stop1 ?stop2 ?stop1Name ?stop2Name ?s ?zusatz WHERE {\n    {\n        ?s a otd:Relation .\n        ?s gtfs:stop ?stop1 .\n        ?s gtfs:stop ?stop2 .\n        ?s otd:relationsgebiet/otd:preistabelle/rdfs:label ?zusatz .\n\n        ?kante a otd:TransportEdge .\n        ?kante gtfs:stop ?stop1 .\n        ?kante gtfs:stop ?stop2 .\n        \n        FILTER (?stop1 != ?stop2)\n        FILTER (?s != ?kante)\n    }\n    UNION\n    {\n        ?s a otd:TransportEdge .\n        ?s gtfs:stop ?stop1 .\n        ?s gtfs:stop ?stop2 .\n\n        ?relation a otd:Relation.\n        ?relation gtfs:stop ?stop1 .\n        ?relation gtfs:stop ?stop2 .\n        \n        FILTER (?stop1 != ?stop2)\n        FILTER (?s != ?relation)\n    }\n\n    ?stop1 schema:name ?stop1Name .\n    ?stop2 schema:name ?stop2Name .\n}\nORDER BY ?s\nLIMIT 100\n\nVALUES (?stop1 ?stop2) {\n\t(<https://lod.opentransportdata.swiss/didok/8504300> <https://lod.opentransportdata.swiss/didok/8504414>)\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Vorberechnete Preistabellen\n\nRelationsgebiete mit vorberechneten Preistabellen :",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "prefix gtfs: <http://vocab.gtfs.org/terms#>\nprefix otd: <https://lod.opentransportdata.swiss/vocab/>\nprefix schema: <http://schema.org/>\nprefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\n# select * where {\nselect ?gebietLabel ?Preistabelle where {\n\n    ?relationsgebiet a otd:Relationsgebiet ;\n        rdfs:label ?gebietLabel ;\n        otd:preistabelle ?preistabelle .\n    \n    ?preistabelle a otd:VorberechnetePreistabelle ;\n        rdfs:label ?Preistabelle .\n\n}\n# order by ?preistabelle ?relationsgebiet\norder by ?gebietLabel ?Preistabelle",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "\nVorberechnete Preistabellen können unterschiedlich ausgeprägt sein, beispielsweise:\n\n- Für ein oder mehrere Kundensegmente\n- Für ein oder mehrere Klassen\n- Mit oder ohne Fahrart\n- Mit oder ohne Geltungsdauer\n\nNachfolgend ein paar Beispiele ...",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX schema: <http://schema.org/>\n\nSELECT ?Preistabelle ?tarifWertVon ?tarifWertBis ?customerSegment ?class ?fahrart ?geltungsdauerUnit ?geltungsdauerValue ?price ?priceCurrency\nWHERE {\n    #BIND(<https://lod.opentransportdata.swiss/preistabelle/ids-91048544002> AS ?preistabelle)   # ein CS, eine klasse, ohne fahrart, mit geltungsdauer\n     BIND(<https://lod.opentransportdata.swiss/preistabelle/ids-192091332001> AS ?preistabelle)  # mehrere CS, eine klasse, ohne fahrart, mit geltungsdauer\n    #BIND(<https://lod.opentransportdata.swiss/preistabelle/ids-14056194> AS ?preistabelle)      # mehrere CS, mehrere klassen, ohne fahrart, mit geltungsdauer\n\n    # BIND(<https://lod.opentransportdata.swiss/preistabelle/ids-14056192> AS ?preistabelle)  # mit fahrart, ohne geltungsdauer   \n\n    ?preistabelle otd:preisauspraegung ?preisauspraegung ;\n                  rdfs:label ?Preistabelle.\n\n    ?preisauspraegung \n        otd:tarifWertVon ?tarifWertVon ;\n        otd:tarifWertBis ?tarifWertBis ;\n        \n        otd:customerSegment ?customerSegment ;\n\n        otd:class ?class ;\n\n        schema:price ?price ;\n        schema:priceCurrency ?priceCurrency .\n\n    OPTIONAL {\n        ?preisauspraegung otd:fahrart ?fahrart .\n    }\n\n    OPTIONAL {\n        ?preisauspraegung schema:billingDuration [\n            schema:value ?geltungsdauerValue ;\n            schema:unitText ?geltungsdauerUnit\n        ]\n    }\n #   FILTER (?tarifWertVon in (1)) \n #   Filter (?geltungsdauerValue in (1))\n        \n} ORDER BY ?customerSegment ?tarifWertVon ?tarifWertBis ?class ?fahrart ?geltungsdauerUnit ?geltungsdauerValue",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Anwendungsbereiche\n\nListe aller Anwendungsbereiche, die eine bestimmte Verkehrskante abdecken:",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX schema: <http://schema.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?awbLabel ?streckenAnwendbarkeitsbedingung ?tuAnwendbarkeitsbedingung WHERE {\n    ?awb a otd:Anwendungsbereich;\n        rdfs:label ?awbLabel.\n    \n    <https://lod.opentransportdata.swiss/transportedge/8507000/8507100/sbb/bahn/regular> otd:anwendungsbereich ?awb .\n\n    optional { ?awb otd:streckenAnwendbarkeitsbedingung ?streckenAnwendbarkeitsbedingung; }\n    optional { ?awb otd:tuAnwendbarkeitsbedingung ?tuAnwendbarkeitsbedingung; }\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "Anwendungsbereiche mit der Anzahl abgedeckten Verkehrskanten:",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX schema: <http://schema.org/>\n\nSELECT  ?awb ?label (count( distinct ?transportedge) AS ?transportedgeCount)  WHERE {\n    {\n        ?awb a otd:Anwendungsbereich;\n            rdfs:label ?label.\n        ?transportedge a otd:TransportEdge ;\n            otd:anwendungsbereich ?awb .\n    }\n}\ngroup by ?awb ?label\norder by desc( ?transportedgeCount )",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Visualisierung eines Anwendungsgebietes (Jungfrau Travelpass)",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX schema: <http://schema.org/>\nPREFIX wgs: <http://www.w3.org/2003/01/geo/wgs84_pos#>\nPREFIX geo: <http://www.opengis.net/ont/geosparql#>\n\n# blue lines:   covered by Jungfrau Travel Pass\n\nSELECT *\nWHERE {\n  {\n    SELECT ?vk ?vkWKTColor WHERE {\n      {\n        BIND(<https://lod.opentransportdata.swiss/anwendungsbereich/jb-jungfrau-travel-pass> AS ?awb1)   \n      # BIND(<https://lod.opentransportdata.swiss/anwendungsbereich/t651-42-engadin-mobil-gaste-abo> AS ?awb1)       \n       \n        BIND(\"blue\" AS ?vkWKTColor)\n\n        ?vk a otd:TransportEdge ;\n          otd:anwendungsbereich ?awb1 .\n        }\n      }\n    }\n  \n   \n  ?vk a otd:TransportEdge ;\n        gtfs:stop ?stop1 ;\n        gtfs:stop ?stop2 ;\n        otd:meanOfTransport ?meanOfTransport .\n\n  ?stop1 schema:identifier ?stop1Id .\n  ?stop2 schema:identifier ?stop2Id .\n  FILTER (?stop1Id > ?stop2Id)\n\n  ?stop1 wgs:lat ?stop1Lat ;\n         wgs:long ?stop1Long .\n  ?stop2 wgs:lat ?stop2Lat ;\n         wgs:long ?stop2Long .\n\n  BIND(STRDT(CONCAT(\"LINESTRING(\", STR(?stop1Long), \" \", STR(?stop1Lat), \", \" , STR(?stop2Long), \" \", STR(?stop2Lat), \")\"), geo:wktLiteral) AS ?vkWKT)\n  BIND(CONCAT(COALESCE(?meanOfTransport, \"-\"), \" \", STR(?stop1Id), \" -> \", STR(?stop2Id), \" \", STR(?vk)) AS ?vkWKTLabel ).\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "Anzahl Verkehrskanten in der Schnittmenge von GA und Halbtax:",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX schema: <http://schema.org/>\n\nSELECT (count( distinct ?transportedge) AS ?transportedgeCount)  WHERE {\n    \n    ?transportedge a otd:TransportEdge ;\n        otd:anwendungsbereich <https://lod.opentransportdata.swiss/anwendungsbereich/t654-generalabonnement> ;\n        otd:anwendungsbereich <https://lod.opentransportdata.swiss/anwendungsbereich/t654-halbtax-abonnement> . \n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### alle Kanten (Verbund und DV) einer Haltestelle",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\n        PREFIX gtfs: <http://vocab.gtfs.org/terms#>\n        PREFIX schema: <http://schema.org/>\n        PREFIX purl: <http://www.purl.org/>\n\n    SELECT DISTINCT ?stop1 ?stop2 ?stop1Name ?stop2Name ?quelle1 ?quelle  where {\n\n    {   ?dvRelation a otd:Relation.\n        ?dvRelation gtfs:stop ?stop1 .\n        ?dvRelation gtfs:stop ?stop2 .\n        bind (?dvRelation as ?quelle). \n        bind (\"DV\" as ?quelle1).\n    \n        FILTER (?stop1 != ?stop2)\n        FILTER(?stop1 IN  (<https://lod.opentransportdata.swiss/didok/8508260>))\n\n            ?stop1 schema:name ?stop1Name .\n            ?stop2 schema:name ?stop2Name .\n    }\n        union \n        {   ?Relation a otd:Relation.\n            ?Relation gtfs:stop ?stop1.\n            ?Relation gtfs:stop ?stop2 .\n            bind (?Relation as ?quelle). \n            bind (\"Zone\" as ?quelle1).\n    \n        FILTER (?stop1 != ?stop2)\n        FILTER (?stop1 IN  (<https://lod.opentransportdata.swiss/didok/8503000>))\n        \n\n            ?stop1 schema:name ?stop1Name .\n            ?stop2 schema:name ?stop2Name .\n        }\n        \n        }\n\n    Limit 10000",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "Welche Verkehrskanten sind beim GA dabei aber nicht beim Halbtax?  (in rot)\n\nWelche Verkehrskanten sind beim Halbtax dabei aber nicht beim GA?  (in grün)\n\nDarstellung auf Karte mit `Geo`.",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX gtfs: <http://vocab.gtfs.org/terms#>\nPREFIX otd: <https://lod.opentransportdata.swiss/vocab/>\nPREFIX schema: <http://schema.org/>\nPREFIX wgs: <http://www.w3.org/2003/01/geo/wgs84_pos#>\nPREFIX geo: <http://www.opengis.net/ont/geosparql#>\n\n# Red lines:   covered by GA but not Halbtax\n# Green lines: covered by Halbtax but not GA\nSELECT *\nWHERE {\n  {\n    SELECT ?vk ?vkWKTColor WHERE {\n      {\n        BIND(<https://lod.opentransportdata.swiss/anwendungsbereich/t654-generalabonnement> AS ?awb1)     # T654 Generalabonnement\n        BIND(<https://lod.opentransportdata.swiss/anwendungsbereich/t654-halbtax-abonnement> AS ?awb2)    # T654 Halbtax-Abonnement\n        BIND(\"red\" AS ?vkWKTColor)\n\n        ?vk a otd:TransportEdge ;\n          otd:anwendungsbereich ?awb1 .\n\n        FILTER NOT EXISTS {\n          ?vk otd:anwendungsbereich ?awb2 .\n        }\n      }\n    }\n  }\n  UNION\n  {\n    SELECT ?vk ?vkWKTColor WHERE {\n      {\n        BIND(<https://lod.opentransportdata.swiss/anwendungsbereich/t654-halbtax-abonnement> AS ?awb1)     # T654 Halbtax-Abonnement\n        BIND(<https://lod.opentransportdata.swiss/anwendungsbereich/t654-generalabonnement> AS ?awb2)      # T654 Generalabonnement\n        BIND(\"green\" AS ?vkWKTColor)\n\n        ?vk a otd:TransportEdge ;\n          otd:anwendungsbereich ?awb1 .\n\n        FILTER NOT EXISTS {\n          ?vk otd:anwendungsbereich ?awb2 .\n        }\n      }\n    }\n  }\n\n  ?vk a otd:TransportEdge ;\n        gtfs:stop ?stop1 ;\n        gtfs:stop ?stop2 ;\n        otd:meanOfTransport ?meanOfTransport .\n\n  ?stop1 schema:identifier ?stop1Id .\n  ?stop2 schema:identifier ?stop2Id .\n  FILTER (?stop1Id > ?stop2Id)\n\n  ?stop1 wgs:lat ?stop1Lat ;\n         wgs:long ?stop1Long .\n  ?stop2 wgs:lat ?stop2Lat ;\n         wgs:long ?stop2Long .\n\n  BIND(STRDT(CONCAT(\"LINESTRING(\", STR(?stop1Long), \" \", STR(?stop1Lat), \", \" , STR(?stop2Long), \" \", STR(?stop2Lat), \")\"), geo:wktLiteral) AS ?vkWKT)\n  BIND(CONCAT(COALESCE(?meanOfTransport, \"-\"), \" \", STR(?stop1Id), \" -> \", STR(?stop2Id), \" \", STR(?vk)) AS ?vkWKTLabel ).\n}",
    "metadata": {}
  }
]